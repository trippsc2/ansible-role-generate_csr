---
- name: Prepare
  hosts:
    - subjects
  become: true
  gather_facts: false
  tasks:    
    - name: Bootstrap python for Ansible
      ansible.builtin.raw: |
        command -v python3 python || (
        command -v apk >/dev/null && sudo apk add --no-progress --update python3 ||
        (test -e /usr/bin/dnf && sudo dnf install -y python3) ||
        (test -e /usr/bin/apt && (apt -y update && apt install -y python-minimal)) ||
        (test -e /usr/bin/yum && sudo yum -y -qq install python3) ||
        (test -e /usr/sbin/pkg && sudo env ASSUME_ALWAYS_YES=yes pkg update && sudo env ASSUME_ALWAYS_YES=yes pkg install python3) ||
        (test -e /usr/sbin/pkg_add && sudo /usr/sbin/pkg_add -U -I -x python%3.7) ||
        echo "Warning: Python not bootstrapped due to unknown platform."
        )
      changed_when: false
    
    - name: Gather OS family
      ansible.builtin.setup:
        gather_subset:
          - '!all'
          - os_family

    - name: Set certificate path variables | Debian-based
      when:
        - ansible_os_family == 'Debian'
      ansible.builtin.set_fact:
        _cert_private_key_path: /etc/ssl/private/cert.key
        _cert_certificate_path: /etc/ssl/certs/cert.crt

    - name: Set certificate path variables | Red Hat-based
      when:
        - ansible_os_family == 'RedHat'
      ansible.builtin.set_fact:
        _cert_private_key_path: /etc/pki/tls/private/cert.key
        _cert_certificate_path: /etc/pki/tls/certs/cert.crt

    - name: Generate private key
      when:
        - generate_existing_private_key
      block:
        - name: Install python3 cryptography library
          ansible.builtin.package:
            name:
              - python3-cryptography
            state: present

        - name: Generate existing private key
          community.crypto.openssl_privatekey:
            path: "{{ _cert_private_key_path }}"
            owner: root
            group: root
            mode: '0600'
            type: RSA
            size: 2048

    - name: Generate existing certificate
      when:
        - generate_existing_cert
      block:
        - name: Generate CSR
          community.crypto.openssl_csr_pipe:
            privatekey_path: "{{ _cert_private_key_path }}"
            common_name: "{{ inventory_hostname }}"
            subject_alt_name:
              - "DNS:{{ inventory_hostname }}"
            key_usage:
              - digitalSignature
              - keyEncipherment
            key_usage_critical: true
            extended_key_usage:
              - serverAuth
            extended_key_usage_critical: true
            basic_constraints: []
            basic_constraints_critical: true
          register: _csr_content

        - name: Generate self-signed certificate
          community.crypto.x509_certificate:
            path: "{{ _cert_certificate_path }}"
            csr_content: "{{ _csr_content.csr }}"
            privatekey_path: "{{ _cert_private_key_path }}"
            provider: selfsigned
            owner: root
            group: root
            mode: '0644'
            force: true
            selfsigned_not_after: "{{ existing_cert_duration }}"
